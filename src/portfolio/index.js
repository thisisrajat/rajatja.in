import React, { Fragment } from "react";

import "./Portfolio.css";

export function CardHeading({ children }) {
  return <div className="card-heading">{children}</div>;
}

export function CardBody({ children }) {
  return <div className="card-body">{children}</div>;
}

export function CardButton({ children }) {
  return <button>{children}</button>;
}

export function Card({ children }) {
  return <div className="card-wrapper">{children}</div>;
}

function CompilerSandox() {
  return (
    <Card>
      <CardHeading>Compiler Sandbox</CardHeading>
      <CardBody>
        This is a PHP and shell based web app which creates a "virtual
        environment" or simply a "sandbox", for fast and secure execution of
        different programs and scripts, by of course using there appropriate
        compilers/interpreters. It abstracts the whole compiling and running
        process from the user, end result being the website working as an IDE.
        It can be used a backend for competitive programming online judges for
        judging the solutions with desired output.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function CodeforcesTool() {
  return (
    <Card>
      <CardHeading>Codeforces Tool</CardHeading>
      <CardBody>
        A web application which queries http://codeforces.com (an online judge
        for competitive programming) to look up for multiple user submissions on
        a problem. It also does statistical analysis for each user. It uses
        Python's Flask framework and Javascript.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function InstagramDownloader() {
  return (
    <Card>
      <CardHeading>Instagram Downloader</CardHeading>
      <CardBody>
        A python script which uses both the official and unofficial API to download images in bulk of a user from Instagram. For obvious reasons, it doesn't work for private users.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function VirtualStockSimulator() {
  return (
    <Card>
      <CardHeading>Virtual Stock Simulator</CardHeading>
      <CardBody>
        It is a stock market simulator which fetches live stock prices from Yahoo! Finance, Google Finance and other services. It allows to trade on the listed tickers on there current price with virtual money. It uses PHP as backend and MySQL Database to store data. This project was implemented during my summer internship at HCL Technologies.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function TechNextReader() {
  return (
    <Card>
      <CardHeading>Tech Next Reader</CardHeading>
      <CardBody>
        It is a news aggregator program, which scrapes data from various Technology news sources and extracts new and trending stories. It then intelligently summarizes them for a quick skimming. Currently I am working on the first release. (It is not open source)
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function RadioRedditStreamer() {
  return (
    <Card>
      <CardHeading>Radio Reddit Streamer</CardHeading>
      <CardBody>
        It combines two best things in the world: shell and music. Radio Reddit Streamer uses http://radioreddit.com API to stream music to your shell using mplayer. It does the same for Windows using VLC Media Player.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function ThisWebsite() {
  return (
    <Card>
      <CardHeading>this->website()</CardHeading>
      <CardBody>
 This website (http://rajatja.in) runs on Python's Flask framework and heavily relies on Javascript. If you're a F.R.I.E.N.D.S. fan and haven't looked at my awesome 404 pages (keep reloading for a new one), you're missing out :)
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function TimeConsumedChecker() {
  return (
    <Card>
      <CardHeading>Time Consumed Checker</CardHeading>
      <CardBody>
        A small C++ utility program which tells the running time of a program using large input generated by python script. Extremely helpful in competitive programming when you need to know if the program will run in time without adding extra lines of code to check it explicitly.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function Twenty() {
  return (
    <Card>
      <CardHeading>Twenty</CardHeading>
      <CardBody>
        A small web app which reminds in about 20 minutes to take a break from computer. It is based on a famous rule, which you might have already heard of, called 20-20-20: Take a 20 second break after 20 minutes of computer work to look at an object that is 20 feets away. Written in Javascript.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}


function SublBuildSystem() {
  return (
    <Card>
      <CardHeading>Sublime Text Build System</CardHeading>
      <CardBody>
        A small C++ utility program which can be tweaked to ones personal use for parsing input from a file and calling the executable again and again for each test case. Helpful tool in competitive programming.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function Ideone() {
  return (
    <Card>
      <CardHeading>Ideone Compiler API</CardHeading>
      <CardBody>
        A simple IDEONE API Wrapper which uses SoapClient to query IDEONE. Submits the source to it and gets the result back. It uses PHP and Javascript.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}

function CreditCardValidator() {
  return (
    <Card>
      <CardHeading>Credit Card Validator</CardHeading>
      <CardBody>
        A C utility program which checksums the credit card number and tells if the number is valid or not and if valid which type of card it is. My first program that spanned longer than 100 lines. I wrote it as a part of CS50 course. Humble beginnings.
      </CardBody>
      <CardButton>Live Demo</CardButton>
      <CardButton>Github</CardButton>
    </Card>
  );
}


export default function Portfolio() {
  return (
    <div className="app-wrapper dimmer portfolio-wrapper">
      <div className="overflow-wrapper">
        <CompilerSandox />
        <CodeforcesTool />
        <InstagramDownloader />
        <VirtualStockSimulator />
        <TechNextReader />
        <ThisWebsite />
        <TimeConsumedChecker />
        <Twenty />
        <SublBuildSystem />
        <Ideone />
        <CreditCardValidator />
      </div>
    </div>
  );
}
